define("paygw_mtnafrica/gateways_modal",["exports","./repository","core/templates","core/modal_factory","core/modal_events","core/str"],(function(_exports,Repository,_templates,_modal_factory,_modal_events,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.process=void 0,Repository=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * This module is responsible for MTN Africa content in the gateways modal.
   *
   * @copyright  2023 Medical Access Uganda
   * @author     Renaat Debleu <info@eWallah.net>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Repository),_templates=_interopRequireDefault(_templates),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events);const showModalWithPlaceholder=async()=>{const modal=await _modal_factory.default.create({body:await _templates.default.render("paygw_mtnafrica/placeholder",{})});return modal.show(),modal};_exports.process=(component,paymentArea,itemId,description)=>Promise.all([showModalWithPlaceholder(),Repository.getConfigForJs(component,paymentArea,itemId)]).then((_ref=>{let[modal,mtnConfig]=_ref;modal.setTitle((0,_str.get_string)("pluginname","paygw_mtnafrica")),console.log(description);modal.getRoot().find("#mtn-phone").append("<h4>"+mtnConfig.phone+"</h4>");modal.getRoot().find("#mtn-country").append("<h4>"+mtnConfig.usercountry+"</h4>");modal.getRoot().find("#mtn-extra").append("<h4>"+mtnConfig.cost+" "+mtnConfig.currency+"</h4>");const payForm=modal.getRoot().find("#mtn-form");return payForm.append('<input type="hidden" name="userid" value="'+mtnConfig.userid+'" />'),payForm.append('<input type="hidden" name="phone" value="'+mtnConfig.phone+'" />'),payForm.append('<input type="hidden" name="country" value="'+mtnConfig.country+'" />'),payForm.append('<input type="hidden" name="component" value="'+component+'" />'),payForm.append('<input type="hidden" name="paymentarea" value="'+paymentArea+'" />'),payForm.append('<input type="hidden" name="itemid" value="'+itemId+'" />'),payForm.append('<input type="hidden" name="description" value="'+description+'" />'),payForm.append('<input type="hidden" name="reference" value="'+mtnConfig.reference+'" />'),modal.getRoot().on(_modal_events.default.hidden,(()=>{console.log("Destroy modal"),modal.destroy()})),Promise.all([modal,mtnConfig])})).then((_ref2=>{let[modal,mtnConfig]=_ref2;modal.getRoot().find("#mtn-cancel").on("click",(function(){modal.destroy()}));const payButton=modal.getRoot().find("#mtn-pay");return payButton.removeAttr("disabled"),payButton.on("click",(function(e){return e.preventDefault(),modal.setBody(_templates.default.render("paygw_mtnafrica/busy",{})),Promise.all([Repository.transactionStart(component,paymentArea,itemId,mtnConfig.reference,mtnConfig.phone,mtnConfig.country)]).then((_ref3=>{let[mtnPay]=_ref3;const cancelButton1=modal.getRoot().find("#mtn-cancel");if(cancelButton1.on("click",(function(){modal.destroy()})),200==mtnPay.code){console.log("mtn Africa payment process started"),console.log("TransactionId: "+mtnPay.xreferenceid),console.log("Token: "+mtnPay.token);const outDiv=modal.getRoot().find("#mtn-out"),spinnerDiv=modal.getRoot().find("#mtn-spinner");outDiv.append("<h4>TransactionId: "+mtnPay.xreferenceid+"</h4>");const b="</div>",progressDiv=modal.getRoot().find("#mtn-progress_bar");[1,2,3,4,5,6,7,8,9,10].forEach((function(el,index){setTimeout((function(){progressDiv.attr("value",10*el),""!=mtnPay.xreferenceid&&(modal.setFooter("Step "+el+"/10"),Promise.all([Repository.transactionComplete(component,paymentArea,itemId,mtnPay.transactionid,mtnConfig.userid,mtnPay.token)]).then((_ref4=>{let[mtnPing]=_ref4;if(modal.setFooter(mtnPing.message),console.log(mtnPing.message),!mtnPing.success){const a='<br/><div class="p-3 mb-2 bg-danger text-white font-weight-bold">';return outDiv.append(a+mtnPing.message+b),void spinnerDiv.attr("style","display: none;")}if("SUCCESSFUL"==mtnPing.message){const a='<br/><div class="p-3 mb-2 text-success font-weight-bold">';outDiv.append(a+mtnPing.message+b);const payButton1=modal.getRoot().find("#mtn-pay");return payButton1.removeAttr("disabled"),payButton1.on("click",(function(){modal.destroy()})),spinnerDiv.attr("style","display: none;"),void cancelButton1.attr("style","display: none;")}}))),10==el&&modal.destroy()}),2e4*index)}))}else console.log("mtn Africa transaction FAILED"),modal.setFooter("FAILED")})).catch((e=>(console.log("mtn Africa payment rejected"),Promise.reject(e.message))))})),new Promise((()=>null))})).catch((e=>Promise.reject(e.message)))}));

//# sourceMappingURL=gateways_modal.min.js.map